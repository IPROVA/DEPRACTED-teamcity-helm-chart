
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "teamcity.fullname" . }}-highmemagent
  labels:
    app: {{ template "teamcity.name" . }}-highmemagent
    chart: {{ template "teamcity.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.highmemagent.replicaCount }}
  serviceName: {{ template "teamcity.fullname" . }}
  selector:
    matchLabels:
      app: {{ template "teamcity.name" . }}-highmemagent
      release: {{ .Release.Name }}
  volumeClaimTemplates:
    - metadata:
        name: agent-data
        {{- if .Values.highmemagent.dataStorage.annotations }}
        {{- include ".Values.highmemagent.dataStorage.annotations" . | nindent 6 }}
        {{- end }}
      spec:
        accessModes:
          - {{ .Values.highmemagent.dataStorage.accessMode | default "ReadWriteOnce" }}
        resources:
          requests:
            storage: {{ .Values.highmemagent.dataStorage.size }}
          {{- if .Values.highmemagent.dataStorage.storageClassName }}
        storageClassName: {{ .Values.highmemagent.dataStorage.storageClassName }}
          {{- end }}
    - metadata:
        name: dind-certs-ca
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: "10Mi"
        storageClassName: {{ .Values.highmemagent.dindStorageClass }}
    - metadata:
        name: dind-certs-client
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: "10Mi"
        storageClassName: {{ .Values.highmemagent.dindStorageClass }}
  template:
    metadata:
      labels:
        app: {{ template "teamcity.name" . }}-highmemagent
        release: {{ .Release.Name }}
      {{- if .Values.highmemagent.podAnnotations }}
      annotations:
{{ toYaml .Values.highmemagent.podAnnotations | indent 8 }}
      {{- end }}
    spec:
      securityContext:
        runAsUser: 0    
        runAsGroup: 0
        fsGroup: 0
      volumes:
        - name: agent-tmp
          emptyDir: {}
        - name: agent-work
          emptyDir: {}
      containers:
        - name: {{ .Chart.Name }}-highmemagent
          image: "{{ .Values.highmemagent.image.repository }}:{{ .Values.highmemagent.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: SERVER_URL
              value: "http://{{ template "teamcity.fullname" . }}:8111"
            - name: DOCKER_HOST
              value: "tcp://localhost:2376"
            - name: DOCKER_TLS_VERIFY
              value: "1"
          volumeMounts:
            - name:  agent-data
              mountPath: /data/teamcity_agent/conf
            - name:  dind-certs-client
              mountPath: /root/.docker
            - name: agent-tmp
              mountPath: /opt/buildagent/temp
            - name: agent-work
              mountPath: /opt/buildagent/work
          resources:    
{{ toYaml .Values.highmemagent.resources | indent 12 }}
        - name: {{ .Chart.Name }}-highmemagent-dind-sidecar
          image: docker:dind
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            privileged: true
          env:
            - name: DOCKER_TLS_CERTDIR
              value: "/certs"
          volumeMounts:
            - name:  dind-certs-ca
              mountPath: /certs/ca
            - name:  dind-certs-client
              mountPath: /certs/client
            - name: agent-tmp
              mountPath: /opt/buildagent/temp
            - name: agent-work
              mountPath: /opt/buildagent/work
      {{- if .Values.highmemagent.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.highmemagent.imagePullSecrets | indent 8 }}
      {{- end }}
    {{- with .Values.highmemagent.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- if .Values.highmemagent.priorityClassName }}
      priorityClassName: "{{ .Values.highmemagent.priorityClassName }}"
    {{- end }}
